{
    "name": "Tractoflow",
    "description": "The TractoFlow pipeline is a fully automated and reproducible dMRI processing pipeline. The application, with default parameters, requires only a dataset conformed to the BIDS specification. BIDS format and applications are explained in detail at http://bids.neuroimaging.io/",
    "author": "SCILUS (https://github.com/scilus)",
    "tool-version": "v2.1.0",
    "schema-version": "0.5",
    "shell": "/bin/bash",
    "custom": {
        "cbrain:readonly-input-files": true,
        "cbrain:author": "Arnaud Bor√© <arnaud.bore@gmail.com> and Guillaume Theaud <guillaume.theaud@usherbrooke.ca>"
     },
    "command-line": "nextflow run /tractoflow/main.nf [BIDS_DIR] [DTI_SHELLS] [FODF_SHELLS] [OUTPUT_DIR] [PARTICIPANTS_LABEL] [ODF_SHELLS] [B0_THR_EXTRACT_B0] [DWI_SHELL_TOLERANCE] [BET_PRELIM_F] [DILATE_B0_MASK_PRELIM_BRAIN_EXTRACTION] [RUN_DWI_DENOISING] [EXTENT] [RUN_TOPUP] [ENCODING_DIRECTION] [READOUT] [RUN_EDDY] [EDDY_CMD] [BET_TOPUP_BEFORE_EDDY_F] [USE_SLICE_DROP_CORRECTION] [BET_DWI_FINAL_F] [BET_DWI_FINAL_F] [RUN_RESAMPLE_DWI] [DWI_RESOLUTION] [DWI_INTERPOLATION] [RUN_T1_DENOISING] [RUN_RESAMPLE_T1] [T1_RESOLUTION] [T1_INTERPOLATION] [NUMBER_OF_TISSUES] [FA] [MIN_FA] [ROI_RADIUS] [MANUAL_FRF] [SH_ORDER] [BASIS] [FODF_METRICS_A_FACTOR] [RELATIVE_THRESHOLD] [MAX_FA_IN_VENTRICULE] [MIN_MD_IN_VENTRICULE] [RUN_PFT_TRACKING] [PFT_SEEDING_MASK_TYPE] [PFT_FA_SEEDING_MASK_THRESHOLD] [PFT_ALGO] [PFT_SEEDING] [PFT_NBR_SEEDS] [PFT_STEP] [PFT_STEP] [PFT_MIN_LEN] [PFT_MAX_LEN] [PFT_COMPRESS_STREAMLINES] [PFT_COMPRESS_VALUE] [PFT_RANDOM_SEED] [run_local_tracking] [LOCAL_SEEDING_MASK_TYPE] [LOCAL_SEEDING_MASK_THRESHOLD] [LOCAL_TRACKING_MASK_TYPE] [LOCAL_FA_TRACKING_MASK_THRESHOLD] [LOCAL_ALGO] [LOCAL_SEEDING] [LOCAL_NBR_SEEDS] [LOCAL_STEP] [LOCAL_THETA] [LOCAL_MIN_LEN] [LOCAL_MAX_LEN] [LOCAL_COMPRESS_STREAMLINES] [PFT_COMPRESS_VALUE] [LOCAL_RANDOM_SEED] [TEMPLATE_T1] [PROCESSES_BRAIN_EXTRACTION_T1] [PROCESSES_DENOISE_DWI] [PROCESSES_DENOISE_T1] [PROCESSES_EDDY] [PROCESSES_FODF] [PROCESSES_REGISTRATION] [PROFILE] ",
    "container-image":
    {
        "image": "scilus/docker-tractoflow:2.1.0",
        "index": "docker://",
        "type": "singularity"
    },
    "groups": [
      {
          "id": "pft",
          "name": "PFT tracking",
          "members": [
              "run_pft_tracking",
              "pft_compress_streamlines",
              "pft_algo",
              "pft_seeding",
              "pft_nbr_seeds",
              "pft_step",
              "pft_theta",
              "pft_min_len",
              "pft_max_len",
              "pft_compress_value",
              "pft_random_seed"
          ]
      },
      {
          "id": "local",
          "name": "Local tracking",
          "members": [
              "run_local_tracking",
              "local_compress_streamlines",
              "local_algo",
              "local_seeding",
              "local_nbr_seeds",
              "local_step",
              "local_theta",
              "local_min_len",
              "local_max_len",
              "local_compress_value",
              "local_random_seed"
          ]
      }
    ],
    "inputs": [
        {
            "description": "Input BIDS folder",
            "id": "bids_dir",
            "name": "Input BIDS folder",
            "optional": false,
            "type": "File",
            "value-key": "[BIDS_DIR]"
        },
        {
            "command-line-flag": "--dti_shells",
            "description": "Shells selected to compute the dti metrics (generally b < 1200)",
            "id": "dti_shells",
            "list": true,
            "name": "dti_shells",
            "optional": false,
            "type": "String",
            "value-key": "[DTI_SHELLS]"
        },
        {
            "command-line-flag": "--fodf_shells",
            "description": "Shells selected to compute the fodf metrics (generally b > 700)",
            "id": "odf_shells",
            "list": true,
            "name": "odf_shells",
            "optional": false,
            "type": "String",
            "value-key": "[ODF_SHELLS]"
        },
        {
            "id": "output_dir",
            "command-line-flag": "--output_dir",
            "name": "Output directory name",
            "type": "File",
            "description": "The directory where the output files should be stored.",
            "value-key": "[OUTPUT_DIR]",
            "optional": true
        },
        {
            "command-line-flag": "--participants_label",
            "description": "A space delimited list of participant identifiers or a single identifier (the sub- prefix can be removed)",
            "id": "participants_label",
            "list": true,
            "name": "participants_label",
            "optional": true,
            "type": "String",
            "value-key": "[PARTICIPANTS_LABEL]"
        },
        {
            "command-line-flag": "--b0_thr_extract_b0",
            "description": "All b-values below b0_thr_extract_b0 are considered b=0 images",
            "id": "b0_thr_extract_b0",
            "name": "b0_thr_extract_b0",
            "optional": true,
            "default-value": 10,
            "type": "Number",
            "value-key": "[B0_THR_EXTRACT_B0]"
        },
        {
            "command-line-flag": "--dwi_shell_tolerance",
            "description": "All b-values to +-dwi_shell_tolerance are considered as the same b-value",
            "id": "dwi_shell_tolerance",
            "name": "dwi_shell_tolerance",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[DWI_SHELL_TOLERANCE]"
        },
        {
            "command-line-flag": "--bet_prelim_f",
            "description": "Fractional Intensity threshold for preliminary BET",
            "id": "bet_prelim_f",
            "name": "bet_prelim_f",
            "optional": true,
            "default-value": 0.16,
            "type": "Number",
            "value-key": "[BET_PRELIM_F]"
        },
        {
            "command-line-flag": "--dilate_b0_mask_prelim_brain_extraction",
            "description": "Dilation factor to keep the whole brain. Not the final extraction.",
            "id": "dilate_b0_mask_prelim_brain_extraction",
            "name": "dilate_b0_mask_prelim_brain_extraction",
            "optional": true,
            "default-value": 5,
            "type": "Number",
            "value-key": "[DILATE_B0_MASK_PRELIM_BRAIN_EXTRACTION]"
        },
        {
            "command-line-flag": "--run_dwi_denoising",
            "description": "Run dwi denoising.",
            "id": "run_dwi_denoising",
            "name": "run_dwi_denoising",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[RUN_DWI_DENOISING]"
        },
        {
            "command-line-flag": "--extent",
            "description": "Denoising block size. Rule: extent^3 >= number of directions.",
            "id": "extent",
            "name": "extent",
            "optional": true,
            "default-value": 7,
            "type": "Number",
            "value-key": "[EXTENT]"
        },
        {
            "command-line-flag": "--run_topup",
            "description": "Run Topup.",
            "id": "run_topup",
            "name": "run_topup",
            "optional": true,
            "type": "String",
            "value-key": "[RUN_TOPUP]"
        },
        {
            "command-line-flag": "--encoding_direction",
            "description": "Encoding direction of the DWI [x, y, z].",
            "id": "encoding_direction",
            "name": "encoding_direction",
            "optional": true,
            "default-value": "y",
            "type": "String",
            "value-key": "[ENCODING_DIRECTION]"
        },
        {
            "command-line-flag": "--readout",
            "description": "Readout time.",
            "id": "readout",
            "name": "readout",
            "optional": true,
            "default-value": "0.062",
            "type": "Number",
            "value-key": "[READOUT]"
        },
        {
            "command-line-flag": "--run_eddy",
            "description": "Run Eddy.",
            "id": "run_eddy",
            "name": "run_eddy",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[RUN_EDDY]"
        },
        {
            "command-line-flag": "--eddy_cmd",
            "description": "Eddy command to use [eddy_openmp, eddy_cuda].",
            "id": "eddy_cmd",
            "name": "eddy_cmd",
            "optional": true,
            "default-value": "eddy_openmp",
            "type": "String",
            "value-choices": [
              "eddy_openmp",
              "eddy_cuda"
            ],
            "value-key": "[EDDY_CMD]"
        },
        {
            "command-line-flag": "--bet_topup_before_eddy_f",
            "description": "Fractional Intensity threshold for intermediate BET operation on topup corrected images.",
            "id": "bet_topup_before_eddy_f",
            "name": "bet_topup_before_eddy_f",
            "optional": true,
            "default-value": "0.16",
            "type": "Number",
            "value-key": "[BET_TOPUP_BEFORE_EDDY_F]"
        },
        {
            "command-line-flag": "--use_slice_drop_correction",
            "description": "If set, will use the slice drop correction option from Eddy.",
            "id": "use_slice_drop_correction",
            "name": "use_slice_drop_correction",
            "optional": true,
            "default-value": "0.16",
            "type": "Number",
            "value-key": "[USE_SLICE_DROP_CORRECTION]"
        },
        {
            "command-line-flag": "--bet_dwi_final_f",
            "description": "Fractional Intensity threshold for the final DWI BET.",
            "id": "bet_dwi_final_f",
            "name": "bet_dwi_final_f",
            "optional": true,
            "default-value": "0.16",
            "type": "Number",
            "value-key": "[BET_DWI_FINAL_F]"
        },
        {
            "command-line-flag": "--fa_mask_threshold",
            "description": "FA threshold to compute WM mask for normalization.",
            "id": "fa_mask_threshold",
            "name": "fa_mask_threshold",
            "optional": true,
            "default-value": "0.4",
            "type": "Number",
            "value-key": "[BET_DWI_FINAL_F]"
        },
        {
            "command-line-flag": "--run_resample_dwi",
            "description": "Run resample DWI.",
            "id": "run_resample_dwi",
            "name": "run_resample_dwi",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[RUN_RESAMPLE_DWI]"
        },
        {
            "command-line-flag": "--dwi_resolution",
            "description": "DWI resolution.",
            "id": "dwi_resolution",
            "name": "dwi_resolution",
            "optional": true,
            "default-value": 1,
            "type": "Number",
            "value-key": "[DWI_RESOLUTION]"
        },
        {
            "command-line-flag": "--dwi_interpolation",
            "description": "DWI interpolation method.",
            "id": "dwi_interpolation",
            "name": "dwi_interpolation",
            "optional": true,
            "default-value": "lin",
            "type": "String",
            "value-key": "[DWI_INTERPOLATION]",
            "value-choices": [
              "nn",
              "lin",
              "quad",
              "cubic"
            ]
        },
        {
            "command-line-flag": "--run_t1_denoising",
            "description": "Run T1 denoising.",
            "id": "run_t1_denoising",
            "name": "run_t1_denoising",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[RUN_T1_DENOISING]"
        },
        {
            "command-line-flag": "--run_resample_t1",
            "description": "Run resample T1.",
            "id": "run_resample_t1",
            "name": "run_resample_t1",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[RUN_RESAMPLE_T1]"
        },
        {
            "command-line-flag": "--t1_resolution",
            "description": "T1 resolution.",
            "id": "t1_resolution",
            "name": "t1_resolution",
            "optional": true,
            "default-value": 1,
            "type": "Number",
            "value-key": "[T1_RESOLUTION]"
        },
        {
            "command-line-flag": "--t1_interpolation",
            "description": "T1 interpolation method.",
            "id": "t1_interpolation",
            "name": "t1_interpolation",
            "optional": true,
            "default-value": "lin",
            "type": "String",
            "value-key": "[T1_INTERPOLATION]",
            "value-choices": [
              "nn",
              "lin",
              "quad",
              "cubic"
            ]
        },
        {
            "command-line-flag": "--number_of_tissues",
            "description": "Number of tissue classes.",
            "id": "number_of_tissues",
            "name": "number_of_tissues",
            "optional": true,
            "default-value": 3,
            "type": "Number",
            "value-key": "[NUMBER_OF_TISSUES]"
        },
        {
            "command-line-flag": "--fa",
            "description": "Initial FA threshold to compute the frf.",
            "id": "fa",
            "name": "fa",
            "optional": true,
            "default-value": 0.7,
            "type": "Number",
            "value-key": "[FA]"
        },
        {
            "command-line-flag": "--min_fa",
            "description": "Minimum FA threshold to compute the frf.",
            "id": "min_fa",
            "name": "min_fa",
            "optional": true,
            "default-value": 0.5,
            "type": "Number",
            "value-key": "[MIN_FA]"
        },
        {
            "command-line-flag": "--roi_radius",
            "description": "Region of interest radius to compute the frf.",
            "id": "roi_radius",
            "name": "roi_radius",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[ROI_RADIUS]"
        },
        {
            "command-line-flag": "--manual_frf",
            "description": "FRF set manually.",
            "id": "manual_frf",
            "name": "manual_frf",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[MANUAL_FRF]"
        },
        {
            "command-line-flag": "--sh_order",
            "description": "Spherical harmonics order. Rules :-sh_order=8 for 45 directions, -sh_order=6 for 28 directions",
            "id": "sh_order",
            "name": "sh_order",
            "optional": true,
            "default-value": 8,
            "type": "Number",
            "value-key": "[SH_ORDER]"
        },
        {
            "command-line-flag": "--basis",
            "description": "Spherical harmonics order. Rules :-sh_order=8 for 45 directions, -sh_order=6 for 28 directions",
            "id": "basis",
            "name": "basis",
            "optional": true,
            "default-value": "descoteaux07",
            "type": "Number",
            "value-key": "[BASIS]",
            "value-choices": [
              "descoteaux07",
              "tournier07"
            ]
        },
        {
            "command-line-flag": "--fodf_metrics_a_factor",
            "description": "Multiplicative factor for AFD max in ventricles.",
            "id": "fodf_metrics_a_factor",
            "name": "fodf_metrics_a_factor",
            "optional": true,
            "default-value": 2.0,
            "type": "Number",
            "value-key": "[FODF_METRICS_A_FACTOR]"
        },
        {
            "command-line-flag": "--relative_threshold",
            "description": "Relative threshold on fODF amplitude in ]0,1].",
            "id": "relative_threshold",
            "name": "relative_threshold",
            "optional": true,
            "default-value": 0.1,
            "type": "Number",
            "value-key": "[RELATIVE_THRESHOLD]"
        },
        {
            "command-line-flag": "--max_fa_in_ventricle",
            "description": "Maximal threshold of FA to be considered as ventricule voxel.",
            "id": "max_fa_in_ventricle",
            "name": "max_fa_in_ventricle",
            "optional": true,
            "default-value": 0.1,
            "type": "Number",
            "value-key": "[MAX_FA_IN_VENTRICULE]"
        },
        {
            "command-line-flag": "--min_md_in_ventricle",
            "description": "Minimal threshold of MD in mm2/s to be considered as ventricule voxel.",
            "id": "min_md_in_ventricle",
            "name": "min_md_in_ventricle",
            "optional": true,
            "default-value": 0.003,
            "type": "Number",
            "value-key": "[MIN_MD_IN_VENTRICULE]"
        },
        {
            "command-line-flag": "--run_pft_tracking",
            "description": "Run Particle Filter Tracking (PFT).",
            "id": "run_pft_tracking",
            "name": "run_pft_tracking",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[RUN_PFT_TRACKING]"
        },
        {
            "command-line-flag": "--pft_seeding_mask_type",
            "description": "[PFT] seeding mask type.",
            "id": "pft_seeding_mask_type",
            "name": "pft_seeding_mask_type",
            "optional": true,
            "default-value": "wm",
            "type": "String",
            "value-key": "[PFT_SEEDING_MASK_TYPE]",
            "value-choices": [
              "wm",
              "interface",
              "fa"
            ]
        },
        {
            "command-line-flag": "--pft_fa_seeding_mask_theshold",
            "description": "[PFT] FA threshold for FA seeding mask.",
            "id": "pft_fa_seeding_mask_theshold",
            "name": "pft_fa_seeding_mask_theshold",
            "optional": true,
            "default-value": "0.1",
            "type": "Number",
            "value-key": "[PFT_FA_SEEDING_MASK_THRESHOLD]"
        },
        {
            "command-line-flag": "--pft_algo",
            "description": "[PFT] Tracking algorithm [prob, det].",
            "id": "pft_algo",
            "name": "pft_algo",
            "optional": true,
            "default-value": "prob",
            "type": "Number",
            "value-key": "[PFT_ALGO]",
            "value-choices": [
              "prob",
              "det"
            ]
        },
        {
            "command-line-flag": "--pft_seeding",
            "description": "[PFT] Seeding type.",
            "id": "pft_seeding",
            "name": "pft_seeding",
            "optional": true,
            "default-value": "npv",
            "type": "String",
            "value-key": "[PFT_SEEDING]",
            "value-choices": [
              "npv",
              "nt"
            ]
        },
        {
            "command-line-flag": "--pft_nbr_seeds",
            "description": "[PFT] Number of seeds related to the seeding type param.",
            "id": "pft_nbr_seeds",
            "name": "pft_nbr_seeds",
            "optional": true,
            "default-value": "10",
            "type": "Number",
            "value-key": "[PFT_NBR_SEEDS]"
        },
        {
            "command-line-flag": "--pft_step",
            "description": "[PFT] Step size.",
            "id": "pft_step",
            "name": "pft_step",
            "optional": true,
            "default-value": 0.5,
            "type": "Number",
            "value-key": "[PFT_STEP]"
        },
        {
            "command-line-flag": "--pft_theta",
            "description": "[PFT] Maximum angle between 2 steps.",
            "id": "pft_theta",
            "name": "pft_theta",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[PFT_STEP]"
        },
        {
            "command-line-flag": "--pft_min_len",
            "description": "[PFT] Minimum length.",
            "id": "pft_min_len",
            "name": "pft_min_len",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[PFT_MIN_LEN]"
        },
        {
            "command-line-flag": "--pft_max_len",
            "description": "[PFT] Maximum length.",
            "id": "pft_max_len",
            "name": "pft_max_len",
            "optional": true,
            "default-value": 200,
            "type": "Number",
            "value-key": "[PFT_MAX_LEN]"
        },
        {
            "command-line-flag": "--pft_compress_streamlines",
            "description": "[PFT] Compress streamlines.",
            "id": "pft_compress_streamlines",
            "name": "pft_compress_streamlines",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[PFT_COMPRESS_STREAMLINES]"
        },
        {
            "command-line-flag": "--pft_compress_value",
            "description": "[PFT] Compression error threshold.",
            "id": "pft_compress_value",
            "name": "pft_compress_value",
            "optional": true,
            "default-value": 0.5,
            "type": "Number",
            "value-key": "[PFT_COMPRESS_VALUE]"
        },
        {
            "command-line-flag": "--pft_random_seed",
            "description": "[PFT] List of random seed numbers for the random number generator. Please write them as list separated using commat WITHOUT SPACE e.g. (0,1,2)",
            "id": "pft_random_seed",
            "name": "pft_random_seed",
            "optional": true,
            "default-value": 0,
            "type": "Number",
            "value-key": "[PFT_RANDOM_SEED]"
        },
        {
            "command-line-flag": "--run_local_tracking",
            "description": "Run Local Tracking.",
            "id": "run_local_tracking",
            "name": "run_local_tracking",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[run_local_tracking]",
            "value-choices": [
              "true",
              "false"
            ]
        },
        {
            "command-line-flag": "--local_seeding_mask_type",
            "description": "[LOCAL] seeding mask type [wm, fa]",
            "id": "local_seeding_mask_type",
            "name": "local_seeding_mask_type",
            "optional": true,
            "default-value": "wm",
            "type": "String",
            "value-key": "[LOCAL_SEEDING_MASK_TYPE]",
            "value-choices": [
              "wm",
              "fa"
            ]
        },
        {
            "command-line-flag": "--local_fa_seeding_mask_theshold",
            "description": "[LOCAL] FA threshold for FA seeding mask",
            "id": "local_fa_seeding_mask_theshold",
            "name": "local_fa_seeding_mask_theshold",
            "optional": true,
            "default-value": 0.1,
            "type": "Number",
            "value-key": "[LOCAL_SEEDING_MASK_THRESHOLD]"
        },
        {
            "command-line-flag": "--local_tracking_mask_type",
            "description": "[LOCAL] tracking mask type [wm, fa]",
            "id": "local_tracking_mask_type",
            "name": "local_tracking_mask_type",
            "optional": true,
            "default-value": "wm",
            "type": "String",
            "value-key": "[LOCAL_TRACKING_MASK_TYPE]",
            "value-choices": [
              "wm",
              "fa"
            ]
        },
        {
            "command-line-flag": "--local_fa_tracking_mask_theshold",
            "description": "[LOCAL] FA threshold for FA seeding mask",
            "id": "local_fa_tracking_mask_theshold",
            "name": "local_fa_tracking_mask_theshold",
            "optional": true,
            "default-value": 0.1,
            "type": "Number",
            "value-key": "[LOCAL_FA_TRACKING_MASK_THRESHOLD]"
        },
        {
            "command-line-flag": "--local_algo",
            "description": "[LOCAL] Tracking algorithm [prob, det].",
            "id": "local_algo",
            "name": "local_algo",
            "optional": true,
            "default-value": "prob",
            "type": "Number",
            "value-key": "[LOCAL_ALGO]",
            "value-choices": [
              "prob",
              "det"
            ]
        },
        {
            "command-line-flag": "--local_seeding",
            "description": "[LOCAL] Seeding type.",
            "id": "local_seeding",
            "name": "local_seeding",
            "optional": true,
            "default-value": "npv",
            "type": "String",
            "value-key": "[LOCAL_SEEDING]",
            "value-choices": [
              "npv",
              "nt"
            ]
        },
        {
            "command-line-flag": "--local_nbr_seeds",
            "description": "[LOCAL] Number of seeds related to the seeding type param.",
            "id": "local_nbr_seeds",
            "name": "local_nbr_seeds",
            "optional": true,
            "default-value": "10",
            "type": "Number",
            "value-key": "[LOCAL_NBR_SEEDS]"
        },
        {
            "command-line-flag": "--local_step",
            "description": "[LOCAL] Step size.",
            "id": "local_step",
            "name": "local_step",
            "optional": true,
            "default-value": 0.5,
            "type": "Number",
            "value-key": "[LOCAL_STEP]"
        },
        {
            "command-line-flag": "--local_theta",
            "description": "[LOCAL] Maximum angle between 2 steps.",
            "id": "local_theta",
            "name": "local_theta",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[LOCAL_THETA]"
        },
        {
            "command-line-flag": "--local_min_len",
            "description": "[LOCAL] Minimum length.",
            "id": "local_min_len",
            "name": "local_min_len",
            "optional": true,
            "default-value": 20,
            "type": "Number",
            "value-key": "[LOCAL_MIN_LEN]"
        },
        {
            "command-line-flag": "--local_max_len",
            "description": "[LOCAL] Maximum length.",
            "id": "local_max_len",
            "name": "local_max_len",
            "optional": true,
            "default-value": 200,
            "type": "Number",
            "value-key": "[LOCAL_MAX_LEN]"
        },
        {
            "command-line-flag": "--local_compress_streamlines",
            "description": "[LOCAL] Compress streamlines.",
            "id": "local_compress_streamlines",
            "name": "local_compress_streamlines",
            "optional": true,
            "default-value": "true",
            "type": "String",
            "value-key": "[LOCAL_COMPRESS_STREAMLINES]"
        },
        {
            "command-line-flag": "--local_compress_value",
            "description": "[LOCAL] Compression error threshold.",
            "id": "local_compress_value",
            "name": "local_compress_value",
            "optional": true,
            "default-value": 0.5,
            "type": "Number",
            "value-key": "[PFT_COMPRESS_VALUE]"
        },
        {
            "command-line-flag": "--local_random_seed",
            "description": "[LOCAL] List of random seed numbers for the random number generator. Please write them as list separated using commat WITHOUT SPACE e.g. (0,1,2)",
            "id": "local_random_seed",
            "name": "local_random_seed",
            "optional": true,
            "default-value": 0,
            "type": "Number",
            "value-key": "[LOCAL_RANDOM_SEED]"
        },
        {
            "command-line-flag": "--template_t1",
            "description": "Path to the template T1 directory for antsBrainExtraction. The folder must contain t1_template.nii.gz and t1_brain_probability_map.nii.gz. The default path is the human_data folder in the singularity container",
            "id": "template_t1",
            "name": "template_t1",
            "optional": true,
            "default-value": "/human-data/mni_152_sym_09c/t1",
            "type": "String",
            "value-key": "[TEMPLATE_T1]"
        },
        {
            "command-line-flag": "--processes_brain_extraction_t1",
            "description": "Number of processes for T1 brain extraction task.",
            "id": "processes_brain_extraction_t1",
            "name": "processes_brain_extraction_t1",
            "optional": true,
            "default-value": 4,
            "type": "Number",
            "value-key": "[PROCESSES_BRAIN_EXTRACTION_T1]"
        },
        {
            "command-line-flag": "--processes_denoise_dwi",
            "description": "Number of processes for DWI denoising task.",
            "id": "processes_denoise_dwi",
            "name": "processes_denoise_dwi",
            "optional": true,
            "default-value": 4,
            "type": "Number",
            "value-key": "[PROCESSES_DENOISE_DWI]"
        },
        {
            "command-line-flag": "--processes_denoise_t1",
            "description": "Number of processes for T1 denoising task.",
            "id": "processes_denoise_t1",
            "name": "processes_denoise_t1",
            "optional": true,
            "default-value": 4,
            "type": "Number",
            "value-key": "[PROCESSES_DENOISE_T1]"
        },
        {
            "command-line-flag": "--processes_eddy",
            "description": "Number of processes for eddy task.",
            "id": "processes_eddy",
            "name": "processes_eddy",
            "optional": true,
            "default-value": 1,
            "type": "Number",
            "value-key": "[PROCESSES_EDDY]"
        },
        {
            "command-line-flag": "--processes_fodf",
            "description": "Number of processes for fODF task.",
            "id": "processes_fodf",
            "name": "processes_fodf",
            "optional": true,
            "default-value": 4,
            "type": "Number",
            "value-key": "[PROCESSES_FODF]"
        },
        {
            "command-line-flag": "--processes_registration",
            "description": "Number of processes for registration task.",
            "id": "processes_registration",
            "name": "processes_registration",
            "optional": true,
            "default-value": 4,
            "type": "Number",
            "value-key": "[PROCESSES_REGISTRATION]"
        },
        {
            "command-line-flag": "--profile fully_reproducible",
            "description": "When this profile is used, all the parameters will be set to have 100% reproducible results. This profile consist to set multi-thread parameters to be fully reproducible [Theaud20].",
            "id": "profile",
            "name": "profile",
            "optional": true,
            "type": "Flag",
            "value-key": "[PROFILE]"
        }
    ]
}
